// Code generated by MockGen. DO NOT EDIT.
// Source: balance.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	dto "github.com/EshkinKot1980/gophermart-loyalty/internal/api/dto"
	gomock "github.com/golang/mock/gomock"
)

// MockBalanceService is a mock of BalanceService interface.
type MockBalanceService struct {
	ctrl     *gomock.Controller
	recorder *MockBalanceServiceMockRecorder
}

// MockBalanceServiceMockRecorder is the mock recorder for MockBalanceService.
type MockBalanceServiceMockRecorder struct {
	mock *MockBalanceService
}

// NewMockBalanceService creates a new mock instance.
func NewMockBalanceService(ctrl *gomock.Controller) *MockBalanceService {
	mock := &MockBalanceService{ctrl: ctrl}
	mock.recorder = &MockBalanceServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBalanceService) EXPECT() *MockBalanceServiceMockRecorder {
	return m.recorder
}

// UserBalance mocks base method.
func (m *MockBalanceService) UserBalance(ctx context.Context) (dto.Balance, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UserBalance", ctx)
	ret0, _ := ret[0].(dto.Balance)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UserBalance indicates an expected call of UserBalance.
func (mr *MockBalanceServiceMockRecorder) UserBalance(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UserBalance", reflect.TypeOf((*MockBalanceService)(nil).UserBalance), ctx)
}
